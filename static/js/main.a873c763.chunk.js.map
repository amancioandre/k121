{"version":3,"sources":["Components/Landing/Landing.js","Components/Form/Event.js","Components/Form/Friend.js","Components/Backdrop/Backdrop.js","Containers/Secret/Secret.js","App.js","serviceWorker.js","index.js"],"names":["landing","props","react_default","a","createElement","className","Form_Event","_ref","_ref$event","event","title","date","description","react","index_es","margin","variant","id","name","defaultValue","label","required","type","multiline","rows","form","friends","map","field","i","nameId","concat","emailId","key","inputProps","data-id","email","onClick","deleteBtn","backdrop","message","Secret","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","submiting","step","service","axios","create","baseURL","withCredentials","handleChange","bind","assertThisInitialized","handleSubmit","addFriend","removeFriend","clearFriends","nextStep","prevStep","e","_e$target","target","value","dataset","myClass","includes","toConsumableArray","setState","_this2","preventDefault","_this$state","post","then","response","_id","data","get","secretResponse","setTimeout","document","location","reload","catch","err","prevState","idx","splice","_this3","_this$state2","displayStep","Landing_Landing","Form_Friend","color","Backdrop_Backdrop","onChange","onSubmit","size","disabled","Component","App","Secret_Secret_Secret","Boolean","window","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kaAWeA,UAPC,SAACC,GAAD,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,4ECAWE,EAAA,SAAAC,GAA6C,IAAAC,EAAAD,EAA1CE,MAASC,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,KAAMC,EAAoBJ,EAApBI,YACtC,OACEV,EAAAC,EAAAC,cAACS,EAAA,SAAD,KACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,OAAO,SACPC,QAAQ,WACRC,GAAG,QACHC,KAAK,QACLC,aAAwB,KAAVT,EAAeA,EAAQ,GACrCU,MAAM,mBACNC,UAAQ,IAEVnB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,OAAO,SACPC,QAAQ,WACRC,GAAG,OACHK,KAAK,OACLJ,KAAK,OACLC,aAAuB,KAATR,EAAcA,EAAO,GACnCU,UAAQ,IAEVnB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,OAAO,SACPQ,WAAS,EACTC,KAAK,IACLR,QAAQ,WACRC,GAAG,cACHC,KAAK,cACLC,aAA8B,KAAhBP,EAAqBA,EAAc,GACjDQ,MAAM,6BACNC,UAAQ,OCmBHI,UAlDF,SAACxB,GA+CZ,OA9CeA,EAAMyB,QAAQC,IAAI,SAACC,EAAOC,GACvC,IAAIC,EAAM,QAAAC,OAAWF,GACjBG,EAAO,SAAAD,OAAYF,GAEvB,OACE3B,EAAAC,EAAAC,cAAA,OAAK6B,IAAKJ,EAAGxB,UAAU,eACrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,OAAO,SACPC,QAAQ,WACRI,MAAM,OACND,aAAclB,EAAMyB,QAAQG,GAAGX,KAC/BgB,WAAY,CACVC,UAAWN,EACXZ,GAAIa,EACJZ,KAAMY,EACNzB,UAAW,QAEbgB,UAAQ,KAGVnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,OAAO,SACPC,QAAQ,WACRI,MAAM,QACNE,KAAK,QACLH,aAAclB,EAAMyB,QAAQG,GAAGO,MAC/BF,WAAY,CACVjB,GAAIe,EACJG,UAAWN,EACXX,KAAMc,EACN3B,UAAW,SAEbgB,UAAQ,KAGZnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYuB,QAAS,SAACR,GAAD,OAAO5B,EAAMqC,UAAUT,KAC1C3B,EAAAC,EAAAC,cAACU,EAAA,EAAD,sBClCGyB,UATE,SAACtC,GAAU,IAClBuC,EAAYvC,EAAZuC,QACR,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UAAkB,KAAZoC,EAAkBA,EAAU,SCMnBC,sBACnB,SAAAA,EAAYxC,GAAO,IAAAyC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM5C,KAEDgD,MAAQ,CACXvB,QAAU,CAAC,CAAER,KAAM,GAAIkB,MAAO,KAC9B3B,MAAO,CACLC,MAAO,GACPC,KAAM,GACNC,YAAa,IAEfsC,WAAW,EACXC,KAAM,EACNX,QAAS,IAGXE,EAAKU,QAAUC,IAAMC,OAAO,CAC1BC,QAAS,0CACTC,iBAAiB,IAGnBd,EAAKe,aAAef,EAAKe,aAAaC,KAAlBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KACpBA,EAAKkB,aAAelB,EAAKkB,aAAaF,KAAlBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KACpBA,EAAKmB,UAAYnB,EAAKmB,UAAUH,KAAff,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KACjBA,EAAKoB,aAAepB,EAAKoB,aAAaJ,KAAlBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KACpBA,EAAKqB,aAAerB,EAAKqB,aAAaL,KAAlBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KACpBA,EAAKsB,SAAWtB,EAAKsB,SAASN,KAAdf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KAChBA,EAAKuB,SAAWvB,EAAKuB,SAASP,KAAdf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KA1BCA,4EA6BNwB,GAAG,IAAAC,EACsCD,EAAEE,OAA9CC,EADMF,EACNE,MAAOhE,EADD8D,EACC9D,UAAsBY,EADvBkD,EACYG,QAAWrD,GAAMC,EAD7BiD,EAC6BjD,KACvCqD,EAAUlE,EACTkE,EAAQC,SAAS,QACpBD,EAAU,OACDA,EAAQC,SAAS,WAC1BD,EAAU,SANE,IASN9D,EAAUoC,KAAKI,MAAfxC,MAER,GAAI,CAAC,OAAQ,SAAS+D,SAASD,GAAU,CACvC,IAAI7C,EAAOiB,OAAA8B,EAAA,EAAA9B,CAAOE,KAAKI,MAAMvB,SAC7BA,EAAQT,GAAIsD,GAAWF,EACvBxB,KAAK6B,SAAS,CAAEhD,iBAEhBjB,EAAMS,GAAQmD,EACdxB,KAAK6B,SAAS,CAAEjE,+CAIPyD,GAAG,IAAAS,EAAA9B,KACdqB,EAAEU,iBACF,IAAMxB,EAAUP,KAAKO,QACrBP,KAAK6B,SAAS,CAAExB,WAAYL,KAAKI,MAAMC,YAHzB,IAAA2B,EAKchC,KAAKI,MAAxBvB,EALKmD,EAKLnD,QAASjB,EALJoE,EAKIpE,MAElB2C,EAAQ0B,KAAK,IAAK,CAAEpD,UAASjB,UAC1BsE,KAAK,SAAAC,GAAY,IACRC,EAAQD,EAASE,KAAjBD,IAER7B,EAAQ+B,IAAR,WAAApD,OAAuBkD,IACpBF,KAAK,SAAAK,GAAkB,IACd5C,EAAY4C,EAAeF,KAA3B1C,QACRmC,EAAKD,SAAS,CAAElC,YAChB6C,WAAW,kBAAMC,SAASC,SAASC,QAAO,IAAO,SAGtDC,MAAM,SAAAC,GAAG,OAAIf,EAAKD,SAAS,CAAElC,QAASkD,0CAIzC7C,KAAK6B,SAAS,SAACiB,GAAD,MAAgB,CAC5BjE,QAAO,GAAAK,OAAAY,OAAA8B,EAAA,EAAA9B,CAAMgD,EAAUjE,SAAhB,CAAyB,CAAER,KAAM,GAAIkB,MAAO,8CAI1CwD,GACX/C,KAAK6B,SAAS,SAACiB,GACb,IAAMjE,EAAOiB,OAAA8B,EAAA,EAAA9B,CAAOgD,EAAUjE,SAE9B,OADAA,EAAQmE,OAAOD,EAAK,GACb,CAAElE,oDAKXmB,KAAK6B,SAAS,CAAEhD,QAAS,CAAC,CAAER,KAAM,GAAIkB,MAAO,0CAGpC,IACHe,EAASN,KAAKI,MAAdE,KACNA,GAAQ,EAAIA,EAAO,EAAIA,GAAQ,EAC/BN,KAAK6B,SAAS,CAAEvB,4CAGP,IACHA,EAASN,KAAKI,MAAdE,KACNA,GAAQ,EAAIA,EAAO,EAAIA,GAAQ,EAC/BN,KAAK6B,SAAS,CAAEvB,0CAGT,IAAA2C,EAAAjD,KAAAkD,EAC8ClD,KAAKI,MAAlDvB,EADDqE,EACCrE,QAASjB,EADVsF,EACUtF,MAAOyC,EADjB6C,EACiB7C,UAAWC,EAD5B4C,EAC4B5C,KAAMX,EADlCuD,EACkCvD,QACrCwD,EAAc,GAElB,OAAO7C,GACL,KAAK,EACH6C,EACE9F,EAAAC,EAAAC,cAAC6F,EAAD,MAAa,MAEjB,KAAK,EACHD,EACE9F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACE,EAAD,CAAOG,MAAOA,KACR,MAEZ,KAAK,EACHuF,EACE9F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAC8F,EAAD,CAASxE,QAASA,EAASY,UAAWO,KAAKiB,eAF7C,cAGa5D,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACTqF,MAAM,YACN9D,QAASQ,KAAKgB,WACZ3D,EAAAC,EAAAC,cAACU,EAAA,EAAD,oBAEJZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEuB,QAASQ,KAAKkB,cACZ7D,EAAAC,EAAAC,cAACU,EAAA,EAAD,gBAVN,eAYQ,MACZ,KAAK,EACHkF,EACE9F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYiB,KAAK,SAAS+C,MAAM,8BAC3C,MACZ,QACE2B,EAAc,KAGlB,OACE9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACX6C,EAAYhD,EAAAC,EAAAC,cAACgG,EAAD,CAAU5D,QAASA,IAAc,KAC/CtC,EAAAC,EAAAC,cAAA,QAAMiG,SAAU,SAACnC,GAAD,OAAO4B,EAAKrC,aAAaS,IAAIoC,SAAUzD,KAAKe,cACzDoC,GAEH9F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEG,GAAG,WACHsF,KAAK,SACLlE,QAASQ,KAAKoB,SACduC,SAAWrD,GAAM,GACfjD,EAAAC,EAAAC,cAACU,EAAA,EAAD,wBAEJZ,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEG,GAAG,WACHsF,KAAK,QACLlE,QAASQ,KAAKmB,SACdwC,SAAWrD,GAAM,GACfjD,EAAAC,EAAAC,cAACU,EAAA,EAAD,oCAlKsB2F,cCErBC,mLARX,OACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuG,EAAD,cAJUF,aCMEG,QACW,cAA7BC,OAAOtB,SAASuB,UAEe,UAA7BD,OAAOtB,SAASuB,UAEhBD,OAAOtB,SAASuB,SAASC,MACvB,2DCZNC,IAASC,OAAO/G,EAAAC,EAAAC,cAAC8G,EAAD,MAAS5B,SAAS6B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvC,KAAK,SAAAwC,GACjCA,EAAaC","file":"static/js/main.a873c763.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Landing.css';\n\nconst landing = (props) => (\n  <div className=\"Landing\">\n    <h1> Shuffle my Friends! </h1>\n    <h4> Because it's doesn't need to be too hard!</h4>\n  </div>\n)\n\nexport default landing;","import React, { Fragment } from 'react';\n\nimport './Event.css';\n\n/* Material UI */\nimport { TextField } from '@material-ui/core';\n\nexport default ({ event: { title, date, description } }) => {\n  return (\n    <Fragment>\n      <div className=\"Event\">\n        <TextField\n          margin=\"normal\"\n          variant=\"outlined\"\n          id=\"title\"\n          name=\"title\"\n          defaultValue={title !== '' ? title : ''}\n          label=\"Your Event Title\"\n          required\n        />\n        <TextField\n          margin=\"normal\"\n          variant=\"outlined\"\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          defaultValue={date !== '' ? date : ''}\n          required\n        />\n        <TextField\n          margin=\"normal\"\n          multiline\n          rows=\"6\"\n          variant=\"outlined\"\n          id=\"description\"\n          name=\"description\"\n          defaultValue={description !== '' ? description : ''}\n          label=\"What an invitation says...\"\n          required\n        />\n      </div>\n    </Fragment>\n  )\n}\n","import React from 'react';\n\nimport './Friend.css';\n\n/* Material UI */\nimport { Icon, IconButton, TextField } from '@material-ui/core';\n\nconst form = (props) => {\n  const fields = props.friends.map((field, i) => {\n    let nameId = `name-${i}`;\n    let emailId = `email-${i}`;\n\n    return (\n      <div key={i} className=\"friendField\">\n        <div className=\"inputFriend\">\n        <TextField\n          margin=\"normal\"\n          variant=\"outlined\"\n          label=\"Name\"\n          defaultValue={props.friends[i].name}\n          inputProps={{\n            \"data-id\": i, \n            id: nameId,\n            name: nameId,\n            className: 'name',\n          }}\n          required\n        />\n        </div>\n        <div className=\"inputFriend\">\n          <TextField\n            margin=\"normal\"\n            variant=\"outlined\"\n            label=\"Email\"\n            type=\"email\" \n            defaultValue={props.friends[i].email}\n            inputProps={{\n              id: emailId,\n              \"data-id\": i,\n              name: emailId,\n              className: 'email',\n            }}\n            required\n          />\n        </div>\n        <div className='deleteBtn'>\n          <IconButton onClick={(i) => props.deleteBtn(i)}>\n            <Icon>delete</Icon>\n          </IconButton>\n        </div>\n      </div>\n    )\n  })\n\n  return fields\n}\n\nexport default form;\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => {\n  const { message } = props\n  return (\n    <div className=\"Backdrop\">\n      <h1>{ message !== '' ?  message : null }</h1>\n    </div>\n  )\n}\n\nexport default backdrop;","import React, { Component } from 'react';\nimport axios from 'axios';\n\n/* Components */\nimport Landing from \"../../Components/Landing/Landing\";\nimport Event from \"../../Components/Form/Event\";\nimport Friends from \"../../Components/Form/Friend\";\nimport Backdrop from \"../../Components/Backdrop/Backdrop\";\n\n/* Material UI */\nimport { IconButton, Icon } from \"@material-ui/core\";\n\nimport './Secret.css';\n\nexport default class Secret extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      friends : [{ name: '', email: ''}],\n      event: { \n        title: '',\n        date: '',\n        description: ''\n      },\n      submiting: false,\n      step: 0,\n      message: ''\n    }\n\n    this.service = axios.create({\n      baseURL: 'https://shufflemyfriends.herokuapp.com/',\n      withCredentials: true\n    });\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addFriend = this.addFriend.bind(this);\n    this.removeFriend = this.removeFriend.bind(this);\n    this.clearFriends = this.clearFriends.bind(this);\n    this.nextStep = this.nextStep.bind(this);\n    this.prevStep = this.prevStep.bind(this);\n  }\n\n  handleChange(e) {\n    const { value, className, dataset: { id }, name } = e.target;\n    let myClass = className;\n    if ( myClass.includes('name') ) {\n      myClass = 'name'\n    } else if( myClass.includes('email')) {\n      myClass = 'email'\n    }\n\n    const { event } = this.state\n\n    if ([\"name\", \"email\"].includes(myClass)) {\n      let friends = [...this.state.friends];\n      friends[id][myClass] = value;\n      this.setState({ friends });\n    } else {\n      event[name] = value;\n      this.setState({ event });\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const service = this.service\n    this.setState({ submiting: !this.state.submiting })\n    /* Manipulating Data for Sending */\n    const  { friends, event } = this.state\n    /* Axios Post starts Shuffling and Generating  */\n    service.post('/', { friends, event })\n      .then(response => {\n        const { _id } = response.data\n\n        service.get(`/secret/${_id}`)\n          .then(secretResponse => {\n            const { message } = secretResponse.data\n            this.setState({ message })\n            setTimeout(() => document.location.reload(true), 5000); \n          })\n      })\n      .catch(err => this.setState({ message: err }))\n  }\n\n  addFriend() {\n    this.setState((prevState) => ({\n      friends: [...prevState.friends, { name: '', email: '' }]\n    }));\n  }\n  \n  removeFriend(idx) {\n    this.setState((prevState) => {\n      const friends = [...prevState.friends];\n      friends.splice(idx, 1);\n      return { friends }\n    })\n  }\n\n  clearFriends() {\n    this.setState({ friends: [{ name: '', email: ''}]});\n  }\n\n  nextStep() {\n    let { step } = this.state;\n    step >= 3 ? step = 3 : step += 1;\n    this.setState({ step });\n  }\n\n  prevStep() {\n    let { step } = this.state;\n    step <= 0 ? step = 0 : step -= 1;\n    this.setState({ step });\n  }\n\n  render() {\n    const { friends, event, submiting, step, message } = this.state;\n    let displayStep = '';\n\n    switch(step) {\n      case 0: // APP Title and Description, Landing Page per se.\n        displayStep = \n          <Landing />; break;\n      \n      case 1: // Event Form\n        displayStep = \n          <div>\n            <h2>Tell me about your event.</h2>\n            <Event event={event} />\n          </div>; break;\n      \n      case 2: // Friends Form\n        displayStep = \n          <div>\n            <h2>Let's call some friends!</h2>\n            <Friends friends={friends} deleteBtn={this.removeFriend}/>\n            Add Friend <IconButton \n              color=\"secondary\"\n              onClick={this.addFriend}>\n                <Icon>add_circle</Icon>\n            </IconButton>\n            <IconButton \n              onClick={this.clearFriends}>\n                <Icon>cancel</Icon>\n            </IconButton> Clear List\n          </div>; break;\n      case 3: // Send!\n        displayStep = \n          <div>\n            <h2>Ok, are you ready!?</h2>\n            <input className=\"submitBtn\" type=\"submit\" value=\"Yes! Shuffle my Friends!\" />\n          </div>; break;\n      default:\n        displayStep = null; break;\n    }\n\n    return (\n      <div className=\"Shuffler\">\n        { submiting ? <Backdrop message={message} /> : null }\n        <form onChange={(e) => this.handleChange(e)} onSubmit={this.handleSubmit}>\n          {displayStep}          \n        </form>\n        <div>\n          <IconButton\n            id='prevStep'\n            size='medium' \n            onClick={this.prevStep} \n            disabled={ step<=0 }>\n              <Icon>arrow_back_ios</Icon>\n          </IconButton>\n          <IconButton\n            id='nextStep'\n            size='small' \n            onClick={this.nextStep} \n            disabled={ step>=3 }>\n              <Icon>arrow_forward_ios</Icon>  \n          </IconButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\n/* Components and Containers */\nimport Secret from \"./Containers/Secret/Secret\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Secret />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}